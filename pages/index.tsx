import Head from 'next/head';
import Image from 'next/image';
import { FormEvent, useState } from 'react';
import { useAuth } from '../contexts/AuthContext';
import styles from '../styles/Home.module.css';
import { GetServerSideProps } from 'next';
import { WithSSRGuest } from '../utils/withSSRGuest';

export default function Home() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const { signIn } = useAuth();

  async function handleSubmit(event: FormEvent) {
    event.preventDefault();

    const data = {
      email,
      password
    };

    await signIn(data);
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Practicing Next Authentication</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form onSubmit={handleSubmit}>
        <input
          type="email"
          value={email}
          onChange={e => setEmail(e.target.value)}
        />
        <input
          type="password"
          value={password}
          onChange={e => setPassword(e.target.value)}
        />
        <button type="submit">Submit</button>
      </form>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

/**
 * Next.js expects that getServerSideProps is a function
 * for example, if you that the result is a list of users you have to specify ont the parameter
 * export const getServerSideProps: GetServerSideProps = WithSSRGuest<{users:string[]}>(
  async context => {
    return {
      props: {
        users:[]
      }
    };
  }
);
 */
export const getServerSideProps: GetServerSideProps = WithSSRGuest(
  async context => {
    return {
      props: {}
    };
  }
);
